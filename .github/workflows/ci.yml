name: .NET CI

on:
  push:
    branches: [ main ]
    tags: ['v*']
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '9.0' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore HelloConsole/HelloConsole.csproj

      - name: Build
        run: dotnet build HelloConsole/HelloConsole.csproj --configuration Release --no-restore

      - name: Publish
        run: dotnet publish HelloConsole/HelloConsole.csproj --configuration Release --no-build -o publish

      - name: Verify publish output
        run: ls -la publish || true

  release:
    name: Release (CD)
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Publish
        run: |
          dotnet publish HelloConsole/HelloConsole.csproj --configuration Release --no-build -o publish

      - name: Prepare zip
        run: |
          sudo apt-get update && sudo apt-get install -y zip
          cd publish
          zip -r ../HelloConsole-${{ github.ref_name }}.zip .

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: HelloConsole-${{ github.ref_name }}.zip
          asset_name: HelloConsole-${{ github.ref_name }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
